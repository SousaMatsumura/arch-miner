/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 29 17:02:38 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import role.RoleMappingStrategy;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchitectureVisitor_ESTest extends ArchitectureVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArchitectureVisitor architectureVisitor0 = new ArchitectureVisitor();
      // Undeclared exception!
      try { 
        architectureVisitor0.getRepositoryID("b/");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArchitectureVisitor architectureVisitor0 = new ArchitectureVisitor();
      // Undeclared exception!
      try { 
        architectureVisitor0.relativePath("$VALUES", "$VALUES");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArchitectureVisitor architectureVisitor0 = new ArchitectureVisitor();
      RoleMappingStrategy roleMappingStrategy0 = new RoleMappingStrategy();
      architectureVisitor0.setStrategy(roleMappingStrategy0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ArchitectureVisitor.createAndConfigure("Mj<dJ;z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
}
