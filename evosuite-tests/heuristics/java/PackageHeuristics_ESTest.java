/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 29 17:15:26 GMT 2018
 */

package heuristics.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import heuristics.AnalysedFile;
import heuristics.ConfigurableHeuristics;
import heuristics.java.PackageHeuristics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.repodriller.domain.Modification;
import org.repodriller.domain.ModificationType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PackageHeuristics_ESTest extends PackageHeuristics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PackageHeuristics packageHeuristics0 = new PackageHeuristics();
      try { 
        packageHeuristics0.configureHeuristic("", (String[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("heuristics.java.PackageHeuristics", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[9];
      PackageHeuristics packageHeuristics0 = new PackageHeuristics();
      ConfigurableHeuristics configurableHeuristics0 = packageHeuristics0.configureHeuristic("regex", stringArray0);
      assertEquals("package", configurableHeuristics0.getName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ModificationType modificationType0 = ModificationType.DELETE;
      Modification modification0 = new Modification("regex", "regex", modificationType0, "regex", "regex");
      PackageHeuristics packageHeuristics0 = new PackageHeuristics();
      AnalysedFile analysedFile0 = new AnalysedFile(modification0);
      Boolean boolean0 = packageHeuristics0.getRole(analysedFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PackageHeuristics packageHeuristics0 = new PackageHeuristics();
      String string0 = packageHeuristics0.getName();
      assertEquals("package", string0);
  }
}
