/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Nov 29 17:19:36 GMT 2018
 */

package role;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class MappingStrategyConfigurator_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "role.MappingStrategyConfigurator"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/edupsousa/Desktop/EvoSuite/arch-miner"); 
    java.lang.System.setProperty("user.home", "/home/edupsousa"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "edupsousa"); 
    java.lang.System.setProperty("user.timezone", "America/Sao_Paulo"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MappingStrategyConfigurator_ESTest_scaffolding.class.getClassLoader() ,
      "org.eclipse.jdt.core.dom.ChildPropertyDescriptor",
      "org.eclipse.jdt.core.IClassFile",
      "org.eclipse.jdt.core.dom.InstanceofExpression",
      "org.eclipse.jdt.internal.core.Openable",
      "org.eclipse.jdt.core.dom.ThisExpression",
      "org.eclipse.jdt.core.dom.Assignment",
      "org.json.JSONException",
      "org.eclipse.jdt.core.dom.Statement",
      "org.eclipse.jdt.core.dom.Expression",
      "org.eclipse.jdt.core.dom.MemberRef",
      "org.eclipse.jdt.core.dom.TypeLiteral",
      "org.eclipse.jdt.core.dom.BindingResolver",
      "org.eclipse.jdt.core.dom.NumberLiteral",
      "org.eclipse.jdt.core.dom.ContinueStatement",
      "org.eclipse.jdt.internal.compiler.util.Util$Displayable",
      "org.eclipse.jface.text.IDocumentPartitioningListener",
      "org.eclipse.jdt.core.IBufferChangedListener",
      "org.eclipse.jdt.internal.compiler.CompilationResult",
      "org.eclipse.jdt.core.dom.ASTNode$NodeList",
      "org.eclipse.jdt.core.dom.VariableDeclarationExpression",
      "org.eclipse.jdt.core.dom.ArrayAccess",
      "org.eclipse.jdt.core.dom.ThrowStatement",
      "org.eclipse.text.edits.UndoEdit",
      "org.eclipse.jdt.core.dom.EnhancedForStatement",
      "org.eclipse.jdt.core.dom.AST",
      "role.MappingStrategyConfigurator",
      "org.eclipse.jdt.core.dom.DefaultBindingResolver",
      "org.eclipse.jdt.core.dom.ParameterizedType",
      "org.eclipse.jdt.core.IModuleDescription",
      "org.eclipse.text.edits.TextEditProcessor",
      "org.eclipse.jdt.core.dom.MethodDeclaration",
      "org.eclipse.jdt.core.dom.PackageDeclaration",
      "org.json.JSONObject$Null",
      "org.eclipse.jdt.core.dom.MarkerAnnotation",
      "org.eclipse.jdt.core.dom.BooleanLiteral",
      "org.eclipse.jdt.core.dom.IntersectionType",
      "org.eclipse.jdt.core.dom.EnumConstantDeclaration",
      "org.eclipse.jdt.internal.compiler.lookup.Binding",
      "org.eclipse.jdt.core.dom.SwitchStatement",
      "org.eclipse.jdt.internal.compiler.lookup.ClassScope",
      "org.eclipse.jdt.core.dom.ImportDeclaration",
      "org.eclipse.jdt.core.dom.TypeDeclarationStatement",
      "org.eclipse.jdt.internal.compiler.parser.Scanner$ScanContext",
      "org.eclipse.jface.text.BadLocationException",
      "org.eclipse.jdt.core.dom.WhileStatement",
      "org.eclipse.jdt.internal.compiler.parser.Parser",
      "org.eclipse.jdt.core.dom.NormalAnnotation",
      "org.eclipse.jdt.internal.core.JavaElement",
      "org.eclipse.jdt.core.dom.TypeDeclaration",
      "org.eclipse.jdt.core.dom.UsesDirective",
      "org.eclipse.jdt.internal.compiler.parser.Scanner$VanguardParser",
      "org.json.JSONTokener",
      "org.eclipse.jdt.core.dom.NullLiteral",
      "org.eclipse.text.edits.TextEditVisitor",
      "org.eclipse.jdt.core.compiler.CharOperation",
      "org.eclipse.jdt.core.dom.ExportsDirective",
      "org.eclipse.jdt.core.dom.LambdaExpression",
      "org.eclipse.jdt.core.dom.QualifiedType",
      "org.eclipse.jdt.core.dom.FieldDeclaration",
      "org.eclipse.jdt.core.dom.PrimitiveType",
      "org.eclipse.jdt.core.dom.Comment",
      "org.eclipse.jdt.core.dom.TextElement",
      "org.eclipse.jdt.core.dom.BlockComment",
      "org.eclipse.jdt.core.dom.TypeParameter",
      "org.eclipse.jdt.core.dom.ConstructorInvocation",
      "org.eclipse.jdt.core.dom.FieldAccess",
      "org.eclipse.jdt.core.dom.StructuralPropertyDescriptor",
      "org.eclipse.jdt.core.dom.Message",
      "org.eclipse.jdt.core.dom.AbstractTypeDeclaration",
      "org.eclipse.jdt.core.dom.ConditionalExpression",
      "org.eclipse.jdt.internal.compiler.problem.ProblemSeverities",
      "org.json.JSONObject",
      "org.eclipse.jdt.internal.compiler.ast.Statement",
      "org.eclipse.jdt.core.dom.ArrayCreation",
      "org.eclipse.jdt.core.IParent",
      "org.eclipse.jdt.core.dom.ProvidesDirective",
      "org.eclipse.jface.text.IPositionUpdater",
      "org.eclipse.jface.text.Position",
      "org.eclipse.jface.text.BadPositionCategoryException",
      "org.eclipse.core.runtime.IAdaptable",
      "org.eclipse.core.runtime.jobs.ISchedulingRule",
      "org.repodriller.domain.ModificationType",
      "org.eclipse.jdt.core.dom.QualifiedName",
      "org.eclipse.jdt.core.dom.InfixExpression",
      "org.eclipse.jdt.core.dom.ModuleModifier$ModuleModifierKeyword",
      "org.eclipse.jdt.internal.compiler.env.IDependent",
      "org.eclipse.core.runtime.IProgressMonitor",
      "org.eclipse.jdt.core.CompletionRequestor",
      "org.eclipse.jdt.core.dom.TagElement",
      "org.repodriller.domain.Modification",
      "org.eclipse.jdt.core.compiler.IProblem",
      "org.eclipse.jdt.internal.compiler.env.ICompilationUnit",
      "org.eclipse.jdt.core.dom.IAnnotationBinding",
      "org.eclipse.jdt.core.dom.ExpressionStatement",
      "org.eclipse.jdt.core.dom.TryStatement",
      "org.eclipse.jdt.internal.compiler.ast.ASTNode",
      "org.eclipse.core.runtime.PlatformObject",
      "org.eclipse.jdt.core.dom.ExpressionMethodReference",
      "org.eclipse.jdt.core.dom.SimpleType",
      "org.eclipse.jface.text.IDocument",
      "org.eclipse.jdt.core.dom.DefaultCommentMapper",
      "org.eclipse.jdt.core.dom.ChildListPropertyDescriptor",
      "org.eclipse.jdt.core.dom.Annotation",
      "org.eclipse.jdt.internal.compiler.impl.ReferenceContext",
      "org.eclipse.jdt.core.dom.ReturnStatement",
      "org.eclipse.jdt.core.dom.MethodInvocation",
      "org.eclipse.jdt.core.dom.Name",
      "org.eclipse.jdt.core.dom.DefaultASTVisitor",
      "org.eclipse.jdt.internal.core.CompilationUnit",
      "org.eclipse.jdt.core.dom.ForStatement",
      "org.eclipse.jdt.core.dom.SuperMethodInvocation",
      "org.eclipse.jdt.core.ITypeRoot",
      "org.eclipse.jdt.core.dom.SingleVariableDeclaration",
      "org.eclipse.jdt.core.dom.Initializer",
      "org.eclipse.jdt.internal.compiler.lookup.TypeConstants",
      "org.eclipse.jdt.core.IJavaElement",
      "org.eclipse.jdt.core.dom.ModuleModifier",
      "org.eclipse.jdt.core.dom.VariableDeclarationFragment",
      "org.eclipse.jdt.core.dom.VariableDeclarationStatement",
      "org.json.JSONArray",
      "org.eclipse.jdt.internal.compiler.parser.TerminalTokens",
      "org.eclipse.jdt.core.dom.Dimension",
      "org.eclipse.jdt.core.dom.CompilationUnit",
      "role.RoleMappingStrategy",
      "org.eclipse.jdt.core.dom.CharacterLiteral",
      "org.eclipse.jdt.core.dom.DoStatement",
      "org.eclipse.jdt.core.ISourceManipulation",
      "org.eclipse.core.runtime.CoreException",
      "org.eclipse.jdt.core.dom.IDocElement",
      "org.eclipse.jdt.core.dom.ASTVisitor",
      "org.eclipse.jdt.core.dom.AnonymousClassDeclaration",
      "org.eclipse.jdt.internal.compiler.lookup.TypeBinding",
      "org.eclipse.jdt.core.dom.SimpleName",
      "org.eclipse.jdt.core.dom.Block",
      "org.eclipse.jdt.core.ICodeCompletionRequestor",
      "org.eclipse.jdt.core.dom.SynchronizedStatement",
      "org.eclipse.jdt.core.dom.IBinding",
      "org.eclipse.jdt.core.dom.CastExpression",
      "org.eclipse.jdt.core.dom.BodyDeclaration",
      "org.eclipse.jdt.core.dom.IModuleBinding",
      "org.eclipse.jdt.core.IOpenable",
      "org.eclipse.jdt.core.dom.ASTNode$NodeList$Cursor",
      "org.eclipse.jdt.core.IType",
      "org.eclipse.jdt.internal.compiler.util.Util",
      "org.eclipse.jdt.core.dom.UnionType",
      "org.eclipse.jdt.core.dom.ModuleDeclaration",
      "org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration",
      "org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration",
      "org.eclipse.jdt.core.dom.PostfixExpression",
      "org.eclipse.jdt.core.JavaModelException",
      "org.eclipse.jdt.core.dom.RequiresDirective",
      "org.eclipse.jdt.core.dom.MethodReference",
      "org.eclipse.jdt.core.IMember",
      "org.json.JSONPointer$Builder",
      "org.eclipse.jface.text.IDocumentListener",
      "org.eclipse.jdt.core.IBuffer",
      "org.eclipse.jdt.core.dom.IfStatement",
      "org.eclipse.jdt.core.dom.TypeMethodReference",
      "org.eclipse.jdt.core.dom.BreakStatement",
      "org.json.JSONPointer",
      "org.eclipse.jdt.internal.compiler.parser.NLSTag",
      "org.eclipse.jdt.core.dom.SimplePropertyDescriptor",
      "org.eclipse.jdt.internal.compiler.lookup.Scope",
      "org.eclipse.jdt.core.dom.MethodRefParameter",
      "org.eclipse.jdt.internal.compiler.parser.Scanner",
      "org.eclipse.jdt.core.dom.Modifier",
      "org.eclipse.text.edits.TextEdit",
      "org.eclipse.jdt.core.dom.StringLiteral",
      "org.eclipse.jdt.core.compiler.InvalidInputException",
      "org.eclipse.jdt.core.dom.NodeEventHandler",
      "org.eclipse.jdt.core.dom.WildcardType",
      "org.eclipse.jdt.core.dom.ITypeBinding",
      "org.eclipse.jdt.core.dom.CreationReference",
      "org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation",
      "org.eclipse.text.edits.MalformedTreeException",
      "org.eclipse.jdt.core.dom.SuperMethodReference",
      "org.eclipse.jdt.core.dom.MethodRef",
      "org.eclipse.jdt.core.dom.EmptyStatement",
      "org.eclipse.jdt.core.ICodeAssist",
      "org.eclipse.jdt.core.dom.PrefixExpression",
      "org.eclipse.jdt.core.dom.SuperConstructorInvocation",
      "org.eclipse.jdt.core.ICompilationUnit",
      "org.eclipse.jdt.internal.core.dom.NaiveASTFlattener",
      "org.eclipse.text.edits.TextEditCopier",
      "org.eclipse.jdt.core.dom.NameQualifiedType",
      "org.eclipse.jdt.core.dom.ArrayInitializer",
      "org.eclipse.jdt.core.ICompletionRequestor",
      "org.eclipse.jdt.core.WorkingCopyOwner",
      "org.eclipse.jdt.internal.compiler.ast.OperatorIds",
      "org.eclipse.core.runtime.IPath",
      "org.eclipse.jdt.core.dom.ASTMatcher",
      "org.eclipse.jdt.core.dom.SwitchCase",
      "org.eclipse.jface.text.IRegion",
      "org.eclipse.jdt.core.dom.ASTNode",
      "org.eclipse.jdt.core.dom.IPackageBinding",
      "org.eclipse.jdt.core.IJavaProject",
      "org.eclipse.jdt.core.ISourceRange",
      "postprocessors.RolePostProcessor",
      "org.eclipse.jdt.core.dom.MemberValuePair",
      "heuristics.RoleHeuristics",
      "org.eclipse.jdt.core.IAnnotatable",
      "org.eclipse.jdt.core.dom.VariableDeclaration",
      "org.eclipse.jdt.core.dom.InternalASTRewrite",
      "org.eclipse.jdt.internal.compiler.lookup.TypeIds",
      "heuristics.AnalysedFile",
      "org.eclipse.jdt.core.dom.ArrayType",
      "org.eclipse.jdt.core.dom.SingleMemberAnnotation",
      "org.eclipse.jdt.core.dom.Modifier$ModifierKeyword",
      "org.eclipse.jface.text.IDocumentPartitioner",
      "org.eclipse.jdt.core.dom.ModulePackageAccess",
      "org.eclipse.jdt.core.dom.EnumDeclaration",
      "org.eclipse.text.edits.TextEdit$InsertionComparator",
      "org.eclipse.jdt.core.dom.AnnotationTypeDeclaration",
      "org.eclipse.jdt.core.IJavaModel",
      "org.eclipse.jdt.core.dom.PrimitiveType$Code",
      "org.eclipse.jdt.internal.compiler.parser.ConflictedParser",
      "org.eclipse.jdt.core.dom.AssertStatement",
      "org.eclipse.jdt.core.dom.IExtendedModifier",
      "org.eclipse.jdt.core.dom.Type",
      "org.eclipse.jdt.core.dom.LineComment",
      "org.eclipse.jdt.core.dom.SuperFieldAccess",
      "org.eclipse.jdt.core.dom.Javadoc",
      "org.eclipse.jdt.core.dom.OpensDirective",
      "org.json.JSONPointerException",
      "org.eclipse.jdt.core.dom.ModuleDirective",
      "org.eclipse.jdt.core.dom.ParenthesizedExpression",
      "org.eclipse.jdt.core.dom.DefaultCommentMapper$CommentMapperVisitor",
      "org.eclipse.jdt.core.dom.LabeledStatement",
      "org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding",
      "org.eclipse.jdt.core.dom.AnnotatableType",
      "org.eclipse.jface.text.ITypedRegion",
      "org.eclipse.jdt.internal.compiler.util.SuffixConstants",
      "org.eclipse.jdt.core.dom.ClassInstanceCreation",
      "org.eclipse.jdt.core.ISourceReference",
      "org.eclipse.core.resources.IResource",
      "org.eclipse.jdt.core.IWorkingCopy",
      "org.eclipse.jdt.core.dom.CatchClause"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MappingStrategyConfigurator_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "role.MappingStrategyConfigurator",
      "org.json.JSONObject$Null",
      "org.json.JSONObject",
      "org.json.JSONTokener",
      "org.json.JSONException"
    );
  }
}
